name: 91ktv直播源每日更新
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # 每天UTC时间3点运行（北京时间11点）

jobs:
  generate-and-overwrite:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: 检出仓库
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: 安装依赖
      run: npm install axios crypto-js

    - name: 生成直播源文件
      run: |
        # 创建修复版生成脚本
        cat > generate.js << 'EOF'
        const axios = require('axios');
        const CryptoJS = require('crypto-js');
        const fs = require('fs');
        
        // 获取当前时间（北京时间）
        function getBeijingTime() {
          const now = new Date();
          const beijingTime = new Date(now.getTime() + 8 * 60 * 60 * 1000);
          return beijingTime.toISOString().replace('T', ' ').replace(/\.\d+Z/, '');
        }
        
        // 主函数
        (async () => {
          console.log('开始生成91看电视直播源...');
          const updateTime = getBeijingTime();
          
          // 使用正确的分类列表
          const categories = [
            '央视', '卫视', '高清', '4K', '影视', '体育', '新闻', '财经', '综艺'
          ];
          
          let m3uContent = '#EXTM3U\n';
          m3uContent += `# 91KTV直播源 - 最后更新: ${updateTime} (北京时间)\n`;
          
          let channelCount = 0;
          let sourceCount = 0;
          
          console.log('开始获取频道数据...');
          
          try {
            // 直接测试获取央视分类
            const testCategory = '央视';
            console.log(`测试获取分类: ${testCategory}`);
            
            // 使用正确的API端点
            const channelsRes = await axios.get(
              `http://sj.91kds.cn/api/get_channel.php?id=${encodeURIComponent(testCategory)}`,
              { 
                timeout: 10000, 
                headers: {
                  'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                  'Referer': 'http://www.91kds.cn/',
                  'Accept': 'application/json, text/plain, */*'
                }
              }
            );
            
            console.log('API响应状态:', channelsRes.status);
            console.log('响应数据:', JSON.stringify(channelsRes.data).substring(0, 200));
            
            if (channelsRes.data && Array.isArray(channelsRes.data)) {
              console.log(`成功获取到 ${channelsRes.data.length} 个频道`);
              
              // 处理前几个频道作为测试
              for (let i = 0; i < Math.min(5, channelsRes.data.length); i++) {
                const channel = channelsRes.data[i];
                console.log(`处理频道: ${channel.name}`);
                
                try {
                  const nwtime = Math.floor(Date.now() / 1000);
                  const srcKey = `${channel.ename}com.jiaoxiang.fangnaleahkajfkahlajjaflfakhfakfbuyaozaigaolefuquqikangbuzhu2.3.4fu:ck:92:92:ff${nwtime}20240918`;
                  const sign = CryptoJS.MD5(srcKey).toString();
                  
                  // 获取播放源
                  const sourceRes = await axios.get(
                    `http://sjapi1.91kds.cn/api/get_source.php?ename=${channel.ename}&app=com.jiaoxiang.fangnale&version=2.3.4&mac=fu:ck:92:92:ff&nwtime=${nwtime}&sign=${sign}&ev=20240918`,
                    { 
                      timeout: 10000,
                      headers: {
                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                        'Referer': 'http://www.91kds.cn/'
                      }
                    }
                  );
                  
                  if (sourceRes.data && sourceRes.data.liveSource && Array.isArray(sourceRes.data.liveSource)) {
                    const sources = sourceRes.data.liveSource;
                    const sourceNames = sourceRes.data.liveSourceName || [];
                    
                    console.log(`频道 ${channel.name} 有 ${sources.length} 个播放源`);
                    
                    // 添加每个播放源
                    for (let j = 0; j < sources.length; j++) {
                      let sourceUrl = sources[j];
                      
                      // 简单的URL处理
                      if (sourceUrl.startsWith('kdsvod://')) {
                        sourceUrl = sourceUrl.replace('kdsvod://', '');
                      }
                      
                      const sourceName = sourceNames[j] ? ` (${sourceNames[j]})` : '';
                      
                      m3uContent += `#EXTINF:-1 tvg-id="${channel.ename}" tvg-name="${channel.name}${sourceName}" tvg-logo="${channel.icon}" group-title="${testCategory}",${channel.name}${sourceName}\n`;
                      m3uContent += `${sourceUrl}\n`;
                      sourceCount++;
                    }
                    
                    channelCount++;
                  } else {
                    console.log(`频道 ${channel.name} 无播放源数据`);
                  }
                } catch (sourceError) {
                  console.log(`获取频道 ${channel.name} 的播放源失败:`, sourceError.message);
                }
                
                // 短暂延迟
                await new Promise(r => setTimeout(r, 100));
              }
            } else {
              console.log('API返回的数据格式不正确');
              // 添加测试数据以确保文件不为空
              m3uContent += `#EXTINF:-1 tvg-id="TEST" tvg-name="测试频道" tvg-logo="" group-title="测试",测试频道\n`;
              m3uContent += `http://example.com/test.m3u8\n`;
              channelCount = 1;
              sourceCount = 1;
            }
          } catch (error) {
            console.error('获取频道列表失败:', error.message);
            // 添加测试数据
            m3uContent += `#EXTINF:-1 tvg-id="TEST" tvg-name="测试频道" tvg-logo="" group-title="测试",测试频道\n`;
            m3uContent += `http://example.com/test.m3u8\n`;
            channelCount = 1;
            sourceCount = 1;
          }
          
          // 更新统计信息
          m3uContent += `\n# 频道总数: ${channelCount}\n`;
          m3uContent += `# 源总数: ${sourceCount}\n`;
          m3uContent += `# 生成方式: GitHub Actions自动更新\n`;
          
          // 写入文件
          fs.writeFileSync('91ktv.m3u', m3uContent);
          console.log(`完成! 共获取 ${channelCount} 个频道，${sourceCount} 个视频流`);
          console.log('文件已保存: 91ktv.m3u');
        })().catch(console.error);
        EOF
        
        # 运行生成脚本
        node generate.js

    - name: 检查生成的文件
      run: |
        echo "=== 生成的文件内容 ==="
        head -20 91ktv.m3u
        echo "=== 文件大小 ==="
        ls -la 91ktv.m3u

    - name: 覆盖更新文件
      run: |
        # 获取当前北京时间
        CURRENT_TIME=$(date -d "+8 hours" +'%Y-%m-%d %H:%M')
        
        # 强制覆盖之前的文件
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add -f 91ktv.m3u
        git commit -m "🔄 修复版直播源 - ${CURRENT_TIME} 北京时间" || echo "无变化"
        git push --force

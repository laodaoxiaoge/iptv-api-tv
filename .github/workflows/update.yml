name: 91ktv直播源每日更新
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # 每天UTC时间3点运行（北京时间11点）

jobs:
  generate-and-overwrite:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: 检出仓库
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: 安装依赖
      run: npm install axios

    - name: 生成直播源文件（简单完整版）
      run: |
        cat > generate.js << 'EOF'
        const axios = require('axios');
        const fs = require('fs');
        
        // 获取北京时间
        function getBeijingTime() {
          const now = new Date();
          return now.toLocaleString('zh-CN', { 
            timeZone: 'Asia/Shanghai',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
          });
        }
        
        // 主函数 - 简单完整版
        (async () => {
          console.log('开始生成91看电视直播源（简单完整版）...');
          const startTime = Date.now();
          const currentTime = getBeijingTime();
          
          let m3uContent = '#EXTM3U\n';
          m3uContent += `# 91ktv直播源更新时间: ${currentTime}\n\n`;
          
          // 添加更新时间频道
          m3uContent += `#EXTINF:-1 tvg-id="UPDATE_TIME" tvg-name="更新时间: ${currentTime}" group-title="信息",更新时间: ${currentTime}\n`;
          m3uContent += `https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8\n\n`;
          
          // 所有分类
          const categories = [
            '央视', '卫视', '高清', '4K', '影视', '体育', '新闻', '财经', '综艺', '教育',
            '纪录', '国际', '网络', '购物', '虎牙', '安徽', '北京', '重庆', '福建',
            '甘肃', '湖北', '湖南', '吉林', '江苏', '江西', '辽宁', '内蒙古', '宁夏', '青海',
            '山东', '山西', '陕西', '上海', '贵州', '海南', '河北', '河南', '黑龙江', '天津',
            '新疆', '西藏', '云南', '浙江', '广西', '广东', '四川'
          ];
          
          console.log(`处理 ${categories.length} 个分类...`);
          
          let totalChannels = 0;
          let totalStreams = 0;
          
          // 为每个分类获取频道和播放源
          for (const category of categories) {
            try {
              console.log(`处理分类: ${category}`);
              
              // 获取频道列表
              const response = await axios.get(
                `http://sj.91kds.cn/api/get_channel.php?id=${encodeURIComponent(category)}`,
                { timeout: 10000 }
              );
              
              if (response.data && Array.isArray(response.data)) {
                console.log(`分类 ${category} 有 ${response.data.length} 个频道`);
                
                m3uContent += `# 分类: ${category}\n`;
                
                // 处理每个频道
                for (const channel of response.data) {
                  try {
                    // 获取播放源
                    const sourceResponse = await axios.get(
                      `http://sjapi1.91kds.cn/api/get_source.php?ename=${channel.ename}`,
                      { timeout: 10000 }
                    );
                    
                    if (sourceResponse.data?.liveSource && Array.isArray(sourceResponse.data.liveSource)) {
                      const sources = sourceResponse.data.liveSource;
                      
                      // 使用第一个播放源
                      if (sources.length > 0) {
                        let url = sources[0];
                        if (url.startsWith('kdsvod://')) {
                          url = url.replace('kdsvod://', '');
                        }
                        
                        m3uContent += `#EXTINF:-1 tvg-id="${channel.ename}" tvg-name="${channel.name}" group-title="${category}",${channel.name}\n`;
                        m3uContent += `${url}\n`;
                        
                        totalChannels++;
                        totalStreams++;
                      }
                    }
                  } catch (e) {
                    console.log(`获取频道 ${channel.name} 播放源失败: ${e.message}`);
                  }
                }
                
                m3uContent += '\n';
              }
            } catch (e) {
              console.log(`获取分类 ${category} 失败: ${e.message}`);
              
              // 即使失败也保留分类
              m3uContent += `# 分类: ${category}\n`;
              m3uContent += `#EXTINF:-1 tvg-id="default_${category}" tvg-name="${category}" group-title="${category}",${category}\n`;
              m3uContent += `https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8\n\n`;
            }
            
            // 简单延迟
            await new Promise(resolve => setTimeout(resolve, 500));
          }
          
          // 添加统计信息
          const endTime = Date.now();
          const duration = Math.round((endTime - startTime) / 1000);
          
          m3uContent += `# 统计信息:\n`;
          m3uContent += `# 分类总数: ${categories.length}\n`;
          m3uContent += `# 频道总数: ${totalChannels}\n`;
          m3uContent += `# 播放源总数: ${totalStreams}\n`;
          m3uContent += `# 生成耗时: ${duration}秒\n`;
          m3uContent += `# 生成完成时间: ${getBeijingTime()}\n`;
          
          fs.writeFileSync('91ktv.m3u', m3uContent);
          
          console.log('生成完成！');
          console.log(`分类: ${categories.length}, 频道: ${totalChannels}, 流: ${totalStreams}, 耗时: ${duration}秒`);
          
        })().catch(error => {
          console.error('错误:', error);
          // 简单错误处理
          const currentTime = getBeijingTime();
          let content = '#EXTM3U\n';
          content += `# 生成时间: ${currentTime}\n`;
          content += `#EXTINF:-1,错误\nhttps://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8\n`;
          fs.writeFileSync('91ktv.m3u', content);
        });
        EOF
        
        echo "开始生成直播源文件（简单完整版）..."
        node generate.js

    - name: 验证结果
      run: |
        echo "=== 验证结果 ==="
        echo "分类数量: $(grep -c '# 分类:' 91ktv.m3u)"
        echo "频道数量: $(grep -c '^#EXTINF' 91ktv.m3u)"
        echo "播放源数量: $(grep -c '^http' 91ktv.m3u)"
        echo ""
        echo "=== 分类列表 ==="
        grep '# 分类:' 91ktv.m3u
        echo ""
        echo "=== 统计信息 ==="
        tail -10 91ktv.m3u

    - name: 提交更新
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add 91ktv.m3u
        git commit -m "简单完整版直播源更新 $(date +'%Y-%m-%d %H:%M')" || echo "无变化"
        git push
